stages:
  - check
  - build

variables:
  GIT_CLONE_PATH: /builds
  LOGFILE: /builds/logs/kupferbootstrap.log
  ARCH: aarch64

default:
  image: registry.gitlab.com/kupfer/kupferbootstrap:dev
  before_script:
    - mkdir -p /kupfer/{pkgbuilds,packages,prebuilts} /root/.cache/kupfer "$(dirname "$LOGFILE")"
    - mount --bind /kupfer/{packages,prebuilts}
    - for dir in /pkgbuilds /prebuilts; do mkdir -p "$dir" && mount --bind /kupfer"$dir" "$dir"; done
    - mount --bind /kupfer /root/.cache/kupfer
    - cd /kupfer
    - cp -a /builds/. ./pkgbuilds/
    - kupferbootstrap config init -N
  artifacts:
    name: logs
    paths:
      - "$LOGFILE"
    expire_in: 30 days
    when: always

check_formatting:
  stage: check
  tags:
    - packages
  script:
    - script --log-out "$LOGFILE" -c 'kupferbootstrap packages check all'

push_packages:
  stage: build
  tags:
    - packages
  only:
    - main
    - dev
  script:
    - cd /kupfer
    - git clone --depth=1 -b "$CI_COMMIT_BRANCH" https://gitlab.com/kupfer/packages/prebuilts.git packages
    - script --log-out "$LOGFILE" -c 'kupferbootstrap packages clean --force'
    - script --log-out "$LOGFILE" -c 'kupferbootstrap packages build all'

    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - cd ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_KEY" > id_rsa.base64
    - openssl enc -d -base64 -A -in id_rsa.base64 -out id_rsa
    - chmod 600 id_rsa
    - ssh-add id_rsa
    - ssh-keyscan -t rsa gitlab.com >> ~/.ssh/known_hosts
    - git config --global user.email "kupfer@kupfer.cu"
    - git config --global user.name "Kupfer Bot"
    - cd /kupfer/packages
    - git add .
    - (git commit -m "$("$GIT_CLONE_PATH"/.gitlab/generate-commit-message.sh)" && git push) || true
