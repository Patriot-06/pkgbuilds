#!/usr/bin/ash

# Original by: Danct12 <danct12@disroot.org>
# SPDX-License-Identifier: GPL-3.0-or-later

source /usr/lib/initcpio/hooks/kupfer-functions.sh

run_hook() {
	export rwopt=rw
	export init=/sbin/init

	eval "$(cat /etc/kupfer/deviceinfo)"
	deviceinfo_partitions_microsd="$deviceinfo_partitions_microsd"
	deviceinfo_partitions_data="$deviceinfo_partitions_data"

	for _cryptroot in "$deviceinfo_partitions_microsd" "$deviceinfo_partitions_data" "/dev/disk/by-label/kupfer_cryptroot" ; do
		if [ -e "$_cryptroot" ] && scan_partitions "$_cryptroot" "LABEL=kupfer_cryptroot"; then
			echo "exporting cryptroot='$RESULT'!"
			export cryptroot="$RESULT"
			unset RESULT
			break
		fi
	done

	# Fall back to scanning for partitions

	if [ -z $cryptroot ]; then
		echo -n "kupfer_cryptroot not found as a raw partition"
		[ -z "$deviceinfo_partitions_microsd" ] || echo -n " nor in data partition '$deviceinfo_partitions_microsd'"
		[ -z "$deviceinfo_partitions_data" ] || echo -n " nor in data partition '$deviceinfo_partitions_data'"
		echo -e ".\nScanning more partitions..."

		for cryptpart in /dev/sd?[0-9]* /dev/mmcblk[0-9]p* /dev/nvme[0-9]n[0-9]p* /dev/vd?[0-9]* /dev/hd?[0-9]* ; do
			! scan_partitions "$cryptpart" "LABEL=kupfer_cryptroot" || break
		done

		echo "exporting cryptroot='$RESULT'! (bruteforce)"
		export cryptroot="$RESULT"
		unset RESULT
	fi

	if [ -z "$cryptroot" ]; then
		echo "Failed to find a partition labeled kupfer_cryptroot. Skipping..."
		unset cryptroot
		return 0
	else
		echo "Found kupfer_cryptroot at: $cryptroot"
	fi

	if cryptsetup isLuks "$cryptroot"; then
		echo "Device is encrypted, starting osk-sdl."
		until cryptsetup status cryptroot | grep -qw active; do
			osk-sdl -G -d $cryptroot -n cryptroot -c /etc/osk.conf
		done
		export root="/dev/mapper/cryptroot"
	else
		echo "kupfer_cryptroot is not encrypted. Skipping..."
	fi

	if [ "$(echo $cryptroot | grep /dev/loop)" ]; then
		export SUBPARTNUMBER="$(echo $cryptroot | grep -Eo '[0-9]+$')"
		export LOOPDEV="${cryptroot%%p$_subpartnumber}"
	fi

	unset cryptroot
}
