diff --git a/app/aboot/aboot.c b/app/aboot/aboot.c
index 18f01fe6..c6372bdb 100644
--- a/app/aboot/aboot.c
+++ b/app/aboot/aboot.c
@@ -5000,6 +5000,18 @@ void publish_getvar_multislot_vars()
 	return;
 }
 
+void get_build_date(unsigned char *buf)
+{
+	strcpy((char*)buf, BUILD_DATE);
+	return;
+}
+
+void get_build_id(unsigned char *buf)
+{
+	strcpy((char*)buf, BUILD_ID);
+	return;
+}
+
 void get_product_name(unsigned char *buf)
 {
 	snprintf((char*)buf, MAX_RSP_SIZE, "%s",  TARGET(BOARD));
diff --git a/app/aboot/lk2nd-device.c b/app/aboot/lk2nd-device.c
index 85037f1a..3a64ba34 100644
--- a/app/aboot/lk2nd-device.c
+++ b/app/aboot/lk2nd-device.c
@@ -103,6 +103,26 @@ static const char *parse_panel(const char *panel)
 	return panel_name;
 }
 
+static const char *parse_wt_board_id(const char *wt_board_id)
+{
+	const char *wt_board_id_name;
+	char *end;
+
+	if (!wt_board_id)
+		return NULL;
+
+	wt_board_id_name = wt_board_id;
+	if (!wt_board_id_name) /* Some other format */
+		return NULL;
+
+	/* Cut off other garbage at the end of the string (e.g. :1:none) */
+	end = strchr(wt_board_id_name, ':');
+	if (end)
+		*end = 0;
+
+	return wt_board_id_name;
+}
+
 static void parse_boot_args(void)
 {
 	char *saveptr;
@@ -120,6 +140,7 @@ static void parse_boot_args(void)
 			parse_arg(aboot, "slot_suffix=", &lk2nd_dev.slot_suffix);
 		} else {
 			parse_arg(arg, "mdss_mdp.panel=", &lk2nd_dev.panel.name);
+			parse_arg(arg, "board_id=", &lk2nd_dev.wt_board_id);
 		}
 
 		arg = strtok_r(NULL, " ", &saveptr);
@@ -127,6 +148,7 @@ static void parse_boot_args(void)
 
 	free(args);
 	lk2nd_dev.panel.name = parse_panel(lk2nd_dev.panel.name);
+	lk2nd_dev.wt_board_id = parse_wt_board_id(lk2nd_dev.wt_board_id);
 }
 
 static const char *fdt_copyprop_str(const void *fdt, int offset, const char *prop)
@@ -218,6 +240,13 @@ static bool lk2nd_device_match(const void *fdt, int offset)
 		return match_panel(fdt, offset, lk2nd_dev.panel.name);
 	}
 
+	val = fdt_getprop(fdt, offset, "lk2nd,match-wt-board-id", &len);
+	if (len >= 0) {
+		if (!lk2nd_dev.wt_board_id)
+			return false;
+		return match_string(lk2nd_dev.wt_board_id, val, len);
+	}
+
 	return true; // No match property
 }
 
@@ -327,6 +356,15 @@ static void lk2nd_parse_device_node(const void *fdt)
 	else
 		dprintf(CRITICAL, "Device node is missing 'model' property\n");
 
+#ifdef MI8937_KERNEL
+	lk2nd_dev.mi8937_bootloader = fdt_copyprop_str(fdt, offset, "xiaomi,bootloader");
+	if (lk2nd_dev.mi8937_bootloader)
+		dprintf(INFO, "Xiaomi Mi8937 Bootloader: %s\n", lk2nd_dev.mi8937_bootloader);
+	lk2nd_dev.mi8937_device = fdt_copyprop_str(fdt, offset, "xiaomi,device");
+	if (lk2nd_dev.mi8937_device)
+		dprintf(INFO, "Xiaomi Mi8937 Device: %s\n", lk2nd_dev.mi8937_device);
+#endif
+
 	pstore = fdt_getprop(fdt, offset, "lk2nd,pstore", &len);
 	if (pstore && len == 2 * sizeof(*pstore)) {
 		lk2nd_pstore_map(fdt32_to_cpu(pstore[0]),
diff --git a/app/aboot/lk2nd-device.h b/app/aboot/lk2nd-device.h
index 9fabd794..2c3b1afd 100644
--- a/app/aboot/lk2nd-device.h
+++ b/app/aboot/lk2nd-device.h
@@ -24,6 +24,12 @@ struct lk2nd_device {
 	const char *radio;
 	const char *slot_suffix;
 
+	const char *wt_board_id;
+#ifdef MI8937_KERNEL
+	const char *mi8937_bootloader;
+	const char *mi8937_device;
+#endif
+
 	void *pstore;
 	unsigned int pstore_size;
 	bool dev_mode;
diff --git a/dts/msm8917-xiaomi-common.dts b/dts/msm8917-xiaomi-common.dts
new file mode 100644
index 00000000..a2bc12f8
--- /dev/null
+++ b/dts/msm8917-xiaomi-common.dts
@@ -0,0 +1,40 @@
+// SPDX-License-Identifier: GPL-2.0-only
+
+/dts-v1/;
+
+/include/ "msm8952.dtsi"
+
+/ {
+	// This is used by the bootloader to find the correct DTB
+	qcom,msm-id = <303 0x0>, <308 0x0>, <309 0x0>;
+	qcom,board-id= <0x1000b 1>, <0x2000b 1>;
+
+	rolex {
+		model = "Xiaomi Redmi 4A (rolex)";
+		compatible = "xiaomi,rolex", "qcom,msm8917", "lk2nd,device";
+		lk2nd,match-wt-board-id = "S88503*";
+		xiaomi,device = "rolex";
+	};
+
+	riva {
+		model = "Xiaomi Redmi 5A (riva) (Oreo bootloader)";
+		compatible = "xiaomi,riva", "qcom,msm8917", "lk2nd,device";
+		lk2nd,match-wt-board-id = "S88505*";
+		xiaomi,bootloader = "Oreo";
+		xiaomi,device = "riva";
+	};
+
+	tiare {
+		model = "Xiaomi Redmi Go (tiare)";
+		compatible = "xiaomi,tiare", "qcom,msm8917", "lk2nd,device";
+		lk2nd,match-wt-board-id = "S88508*";
+		xiaomi,device = "tiare";
+	};
+
+	// Bootloader won't continue if it can't delete some nodes from below
+	soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x0 0x0 0x0 0xffffffff>;
+	};
+};
diff --git a/dts/msm8917-xiaomi-riva.dts b/dts/msm8917-xiaomi-riva.dts
new file mode 100644
index 00000000..0111ca6a
--- /dev/null
+++ b/dts/msm8917-xiaomi-riva.dts
@@ -0,0 +1,23 @@
+// SPDX-License-Identifier: GPL-2.0-only
+
+/dts-v1/;
+
+/include/ "msm8952.dtsi"
+
+/ {
+	// This is used by the bootloader to find the correct DTB
+	qcom,msm-id = <303 0x0>, <308 0x0>, <309 0x0>;
+	qcom,board-id= <0x1000b 2>, <0x2000b 2>;
+
+	model = "Xiaomi Redmi 5A (riva) (Nougat bootloader)";
+	compatible = "xiaomi,riva", "qcom,msm8917", "lk2nd,device";
+	xiaomi,bootloader = "Nougat";
+	xiaomi,device = "riva";
+
+	// Bootloader won't continue if it can't delete some nodes from below
+	soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x0 0x0 0x0 0xffffffff>;
+	};
+};
diff --git a/dts/msm8917-xiaomi-ugglite.dts b/dts/msm8917-xiaomi-ugglite.dts
new file mode 100644
index 00000000..f7850e7a
--- /dev/null
+++ b/dts/msm8917-xiaomi-ugglite.dts
@@ -0,0 +1,23 @@
+// SPDX-License-Identifier: GPL-2.0-only
+
+/dts-v1/;
+
+/include/ "msm8952.dtsi"
+
+/ {
+	// This is used by the bootloader to find the correct DTB
+	qcom,msm-id = <303 0x0>, <308 0x0>, <309 0x0>;
+	qcom,board-id = <8 0>;
+	qcom,pmic-id = <0x10019 0x0 0x0 0x0>;
+
+	model = "Xiaomi Redmi Note 5A Lite (ugglite)";
+	compatible = "xiaomi,ugglite", "qcom,msm8917", "lk2nd,device";
+	xiaomi,device = "ugglite";
+
+	// Bootloader won't continue if it can't delete some nodes from below
+	soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x0 0x0 0x0 0xffffffff>;
+	};
+};
diff --git a/dts/msm8937-xiaomi-land.dts b/dts/msm8937-xiaomi-land.dts
new file mode 100644
index 00000000..7ccf15fb
--- /dev/null
+++ b/dts/msm8937-xiaomi-land.dts
@@ -0,0 +1,22 @@
+// SPDX-License-Identifier: GPL-2.0-only
+
+/dts-v1/;
+
+/include/ "msm8952.dtsi"
+
+/ {
+	// This is used by the bootloader to find the correct DTB
+	qcom,msm-id = <294 0x0>;
+	qcom,board-id= <0x1000b 1>, <0x2000b 1>;
+
+	model = "Xiaomi Redmi 3S / 3X (land)";
+	compatible = "xiaomi,land", "qcom,msm8937", "lk2nd,device";
+	xiaomi,device = "land";
+
+	// Bootloader won't continue if it can't delete some nodes from below
+	soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x0 0x0 0x0 0xffffffff>;
+	};
+};
diff --git a/dts/msm8937-xiaomi-prada.dts b/dts/msm8937-xiaomi-prada.dts
new file mode 100644
index 00000000..5be805d9
--- /dev/null
+++ b/dts/msm8937-xiaomi-prada.dts
@@ -0,0 +1,22 @@
+// SPDX-License-Identifier: GPL-2.0-only
+
+/dts-v1/;
+
+/include/ "msm8952.dtsi"
+
+/ {
+	// This is used by the bootloader to find the correct DTB
+	qcom,msm-id = <294 0x0>;
+	qcom,board-id = <8 0>;
+
+	model = "Xiaomi Redmi 4 (prada)";
+	compatible = "xiaomi,prada", "qcom,msm8937", "lk2nd,device";
+	xiaomi,device = "prada";
+
+	// Bootloader won't continue if it can't delete some nodes from below
+	soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x0 0x0 0x0 0xffffffff>;
+	};
+};
diff --git a/dts/msm8940-xiaomi-santoni.dts b/dts/msm8940-xiaomi-santoni.dts
index de8b155f..cfb6fe7b 100644
--- a/dts/msm8940-xiaomi-santoni.dts
+++ b/dts/msm8940-xiaomi-santoni.dts
@@ -6,12 +6,14 @@
 /include/ "msm8952.dtsi"
 
 / {
-	// This is used by the bootloader to find the correct DTB 
+	// This is used by the bootloader to find the correct DTB
 	qcom,msm-id = <313 0x0>;
 	qcom,board-id = <0x1000b 1>, <0x2000b 1>;
+	qcom,pmic-id = <0x10019 0x010011 0x0 0x0>;
 
 	model = "Xiaomi Redmi 4X (santoni)";
 	compatible = "xiaomi,santoni", "qcom,msm8940", "lk2nd,device";
+	xiaomi,device = "santoni";
 
 	// Bootloader won't continue if it can't delete some nodes from below
 	soc {
diff --git a/dts/msm8940-xiaomi-ugg.dts b/dts/msm8940-xiaomi-ugg.dts
index 9e12c0ab..f7bb57d4 100644
--- a/dts/msm8940-xiaomi-ugg.dts
+++ b/dts/msm8940-xiaomi-ugg.dts
@@ -5,12 +5,14 @@
 /include/ "msm8952.dtsi"
 
 / {
-	// This is used by the bootloader to find the correct DTB 
+	// This is used by the bootloader to find the correct DTB
 	qcom,msm-id = <313 0x0>;
 	qcom,board-id = <0x08 0>;
+	qcom,pmic-id = <0x10019 0x0 0x0 0x0>;
 
 	model = "Xiaomi Redmi Note 5A (ugg)";
 	compatible = "xiaomi,ugg", "qcom,msm8940", "lk2nd,device";
+	xiaomi,device = "ugg";
 
 	// Bootloader won't continue if it can't delete some nodes from below
 	soc {
diff --git a/dts/rules.mk b/dts/rules.mk
index 6779ff54..3f9874c5 100644
--- a/dts/rules.mk
+++ b/dts/rules.mk
@@ -16,11 +16,6 @@ DTBS += \
 	$(LOCAL_DIR)/msm8953-meizu-m1721.dtb \
 	$(LOCAL_DIR)/msm8953-motorola-potter.dtb
 endif
-ifeq ($(PROJECT), msm8952-secondary)
-DTBS += \
-	$(LOCAL_DIR)/msm8940-xiaomi-santoni.dtb \
-	$(LOCAL_DIR)/msm8940-xiaomi-ugg.dtb
-endif
 ifeq ($(PROJECT), msm8917-secondary)
 DTBS += \
 	$(LOCAL_DIR)/msm8917-samsung-r06.dtb \
@@ -30,3 +25,21 @@ ifeq ($(PROJECT), msm8937-secondary)
 DTBS += \
 	$(LOCAL_DIR)/msm8937-nokia-nd1.dtb
 endif
+
+ifeq ($(PROJECT), mi8937-secondary)
+DTBS += \
+	$(LOCAL_DIR)/msm8917-xiaomi-common.dtb \
+	$(LOCAL_DIR)/msm8917-xiaomi-riva.dtb \
+	$(LOCAL_DIR)/msm8917-xiaomi-ugglite.dtb \
+	$(LOCAL_DIR)/msm8937-xiaomi-prada.dtb \
+	$(LOCAL_DIR)/msm8940-xiaomi-santoni.dtb \
+	$(LOCAL_DIR)/msm8940-xiaomi-ugg.dtb
+endif
+ifeq ($(PROJECT), mi439-secondary)
+DTBS += \
+	$(LOCAL_DIR)/sdm439-xiaomi-pine.dtb
+endif
+ifeq ($(PROJECT), land-secondary)
+DTBS += \
+	$(LOCAL_DIR)/msm8937-xiaomi-land.dtb
+endif
diff --git a/dts/sdm439-xiaomi-pine.dts b/dts/sdm439-xiaomi-pine.dts
new file mode 100644
index 00000000..ae72fee2
--- /dev/null
+++ b/dts/sdm439-xiaomi-pine.dts
@@ -0,0 +1,22 @@
+// SPDX-License-Identifier: GPL-2.0-only
+
+/dts-v1/;
+
+/include/ "msm8953.dtsi"
+
+/ {
+	// This is used by the bootloader to find the correct DTB
+	qcom,msm-id = <353 0x0>;
+	qcom,board-id = <0xb 2>;
+	qcom,pmic-id = <0x010016 0x25 0x0 0x0>;
+
+	model = "PINE QRD";
+	compatible = "xiaomi,pine", "qcom,sdm439", "lk2nd,device";
+
+	// Bootloader won't continue if it can't delete some nodes from below
+	soc {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		ranges = <0x0 0x0 0x0 0xffffffff>;
+	};
+};
diff --git a/include/platform.h b/include/platform.h
index 5d89c3f2..25a1f3d4 100644
--- a/include/platform.h
+++ b/include/platform.h
@@ -85,6 +85,8 @@ int platform_is_msm8996();
 int platform_is_apq8096_mediabox();
 bool platform_use_qmp_misc_settings();
 void set_device_unlock_value(int type, bool status);
+void get_build_date(unsigned char *buf);
+void get_build_id(unsigned char *buf);
 void get_product_name(unsigned char *buf);
 void get_bootloader_version(unsigned char *buf);
 void get_baseband_version(unsigned char *buf);
diff --git a/makefile b/makefile
index 437f7bcb..8fe5bfa9 100644
--- a/makefile
+++ b/makefile
@@ -57,6 +57,7 @@ CFLAGS := -O2 -g -fno-builtin -finline -Wno-multichar -Wno-unused-parameter -Wno
 # -fcommon is needed to build this using GCC 10
 CFLAGS += -fcommon
 #CFLAGS += -Werror
+CFLAGS += -DBUILD_DATE="\"$(shell LANG=C TZ=UTC date)\""
 ifeq ($(EMMC_BOOT),1)
   CFLAGS += -D_EMMC_BOOT=1
 endif
@@ -80,6 +81,17 @@ ifeq ($(ENABLE_EARLY_ETHERNET),1)
   CFLAGS += -DENABLE_EARLY_ETHERNET=1
 endif
 
+ifneq ($(CUSTOM_BUILD_ID),)
+  BUILD_ID := $(CUSTOM_BUILD_ID)
+else
+  BUILD_ID := $(shell git rev-parse --short HEAD)
+endif
+CFLAGS += -DBUILD_ID="\"$(BUILD_ID)\""
+
+ifneq ($(DISPLAY_CUSTOM_MESSAGE),)
+CFLAGS += -DDISPLAY_CUSTOM_MESSAGE="\"$(DISPLAY_CUSTOM_MESSAGE)\""
+endif
+
 # setup toolchain prefix
 TOOLCHAIN_PREFIX ?= arm-eabi-
 CFLAGS += -fstack-protector-all
diff --git a/platform/msm8952/platform.c b/platform/msm8952/platform.c
index 6fa24f22..ffc377ae 100644
--- a/platform/msm8952/platform.c
+++ b/platform/msm8952/platform.c
@@ -168,6 +168,20 @@ void platform_init_mmu_mappings(void)
 
 }
 
+addr_t platform_map_fb(addr_t phys_addr, uint32_t size)
+{
+	if (phys_addr != MIPI_FB_ADDR) {
+		addr_t end = phys_addr + size;
+		addr_t addr;
+		for (addr = phys_addr; addr < end; addr += MB) {
+			arm_mmu_map_section(addr, addr, COMMON_MEMORY);
+		}
+		arm_mmu_flush();
+	}
+
+	return phys_addr;
+}
+
 addr_t platform_get_virt_to_phys_mapping(addr_t virt_addr)
 {
 	/* Using 1-1 mapping on this platform. */
diff --git a/platform/msm_shared/dev_tree.c b/platform/msm_shared/dev_tree.c
index 8a312130..dcd85284 100644
--- a/platform/msm_shared/dev_tree.c
+++ b/platform/msm_shared/dev_tree.c
@@ -380,6 +380,12 @@ static boolean dtb_read_find_match(dt_info *current_dtb_info, dt_info *best_dtb_
 	const char *board_prop = NULL;
 	const char *pmic_prop = NULL;
 	boolean find_best_match = false;
+#ifdef MI8937_KERNEL
+	int mi8937_bootloader_len;
+	const char *mi8937_bootloader_prop = NULL;
+	int mi8937_device_len;
+	const char *mi8937_device_prop = NULL;
+#endif
 
 	current_dtb_info->dt_match_val = 0;
 	root_offset = fdt_path_offset(dtb, "/");
@@ -388,6 +394,33 @@ static boolean dtb_read_find_match(dt_info *current_dtb_info, dt_info *best_dtb_
 		return false;
 	}
 
+#ifdef MI8937_KERNEL
+	mi8937_device_prop = (const char *)fdt_getprop(dtb, root_offset, "xiaomi,device", &mi8937_device_len);
+	if (mi8937_device_prop && (mi8937_device_len > 0)) {
+		dprintf(SPEW, "Xiaomi Mi8937 Device = %s\n", mi8937_device_prop);
+		if (strcmp(mi8937_device_prop, lk2nd_dev.mi8937_device) == 0) {
+			dprintf(SPEW, "Xiaomi Mi8937 Device Matched!\n");
+			mi8937_bootloader_prop = (const char *)fdt_getprop(dtb, root_offset, "xiaomi,bootloader", &mi8937_bootloader_len);
+			if (mi8937_bootloader_prop && (mi8937_bootloader_len > 0)) {
+				dprintf(SPEW, "Xiaomi Mi8937 Bootloader = %s\n", mi8937_bootloader_prop);
+				if (strcmp(mi8937_bootloader_prop, lk2nd_dev.mi8937_bootloader) == 0) {
+					dprintf(SPEW, "Xiaomi Mi8937 Bootloader Matched! Found the best dtb node.\n");
+					current_dtb_info->dt_match_val = UINT_MAX;
+					goto cleanup;
+				} else {
+					dprintf(SPEW, "Xiaomi Mi8937 Bootloader doesn't match!\n");
+				}
+			} else {
+				dprintf(SPEW, "Xiaomi Mi8937 Bootloader hasn't specified! Found the best dtb node.\n");
+				current_dtb_info->dt_match_val = UINT_MAX;
+				goto cleanup;
+			}
+		} else {
+			dprintf(SPEW, "Xiaomi Mi8937 Device doesn't match!\n");
+		}
+	}
+#endif
+
 	/* Get the msm-id prop from DTB and find best match */
 	platform_prop = (const char *)fdt_getprop(dtb, root_offset, "qcom,msm-id", &platform_id_len);
 	if (platform_prop && (platform_id_len > 0) && (!(platform_id_len % PLAT_ID_SIZE))) {
diff --git a/platform/msm_shared/display_menu.c b/platform/msm_shared/display_menu.c
index 142efd48..92cb4164 100644
--- a/platform/msm_shared/display_menu.c
+++ b/platform/msm_shared/display_menu.c
@@ -467,6 +467,14 @@ void display_fastboot_menu_renew(struct select_msg_info *fastboot_msg_info)
 
 	display_fbcon_menu_message("FASTBOOT MODE\n", FBCON_RED_MSG, common_factor);
 
+	get_build_date((unsigned char *) msg_buf);
+	snprintf(msg, sizeof(msg), "BUILD_DATE - %s\n", msg_buf);
+	display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
+
+	get_build_id((unsigned char *) msg_buf);
+	snprintf(msg, sizeof(msg), "BUILD_ID - %s\n", msg_buf);
+	display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
+
 	get_product_name((unsigned char *) msg_buf);
 	snprintf(msg, sizeof(msg), "PRODUCT_NAME - %s\n", msg_buf);
 	display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
@@ -499,6 +507,22 @@ void display_fastboot_menu_renew(struct select_msg_info *fastboot_msg_info)
 		display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
 	}
 
+	if (lk2nd_dev.wt_board_id) {
+		snprintf(msg, sizeof(msg), "WINGTECH BOARD ID - %s\n", lk2nd_dev.wt_board_id);
+		display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
+	}
+
+#ifdef MI8937_KERNEL
+	if (lk2nd_dev.mi8937_bootloader) {
+		snprintf(msg, sizeof(msg), "MI8937 BOOTLOADER - %s\n", lk2nd_dev.mi8937_bootloader);
+		display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
+	}
+	if (lk2nd_dev.mi8937_device) {
+		snprintf(msg, sizeof(msg), "MI8937 DEVICE - %s\n", lk2nd_dev.mi8937_device);
+		display_fbcon_menu_message(msg, FBCON_COMMON_MSG, common_factor);
+	}
+#endif
+
 	memset(msg_buf, 0, sizeof(msg_buf));
 	target_serialno((unsigned char *) msg_buf);
 	snprintf(msg, sizeof(msg), "SERIAL NUMBER - %s\n", msg_buf);
@@ -512,6 +536,13 @@ void display_fastboot_menu_renew(struct select_msg_info *fastboot_msg_info)
 		is_device_locked()? "locked":"unlocked");
 	display_fbcon_menu_message(msg, FBCON_RED_MSG, common_factor);
 
+#ifdef DISPLAY_CUSTOM_MESSAGE
+	display_fbcon_menu_message("\n", FBCON_RED_MSG, common_factor);
+	fbcon_draw_line(FBCON_COMMON_MSG);
+	display_fbcon_menu_message("\n", FBCON_RED_MSG, common_factor);
+	display_fbcon_menu_message(DISPLAY_CUSTOM_MESSAGE, FBCON_COMMON_MSG, common_factor);
+#endif
+
 end:
 	fastboot_msg_info->info.msg_type = DISPLAY_MENU_FASTBOOT;
 	fastboot_msg_info->info.option_num = len;
diff --git a/platform/msm_shared/partition_parser.c b/platform/msm_shared/partition_parser.c
index ebee9697..e01a04f6 100755
--- a/platform/msm_shared/partition_parser.c
+++ b/platform/msm_shared/partition_parser.c
@@ -96,10 +96,10 @@ struct partition_entry* partition_get_partition_entries()
 	return partition_entries;
 }
 
-void partition_split_boot(uint32_t block_size)
+void partition_split_boot(uint32_t block_size, bool part_recovery)
 {
 	struct partition_entry *boot;
-	int index = partition_get_index("boot");
+	int index = partition_get_index(part_recovery ? "recovery" : "boot");
 	unsigned long long lk_size = (1 * 1024 * 1024) / block_size;
 
 	if (index == INVALID_PTN) {
@@ -116,7 +116,7 @@ void partition_split_boot(uint32_t block_size)
 	if (partition_count < NUM_PARTITIONS) {
 		struct partition_entry *lk = &partition_entries[partition_count++];
 		memcpy(lk, boot, sizeof(*lk));
-		strcpy(lk->name, "lk2nd");
+		strcpy(lk->name, part_recovery ? "lk2nd-recovery" : "lk2nd");
 		lk->last_lba = lk->first_lba + lk_size - 1;
 		lk->size = lk_size;
 	} else {
@@ -160,7 +160,8 @@ unsigned int partition_read_table()
 	/* TODO: Move this to mmc_boot_read_gpt() */
 	partition_scan_for_multislot();
 
-	partition_split_boot(block_size);
+	partition_split_boot(block_size, false);
+	partition_split_boot(block_size, true);
 	return 0;
 }
 
diff --git a/project/land-secondary.mk b/project/land-secondary.mk
new file mode 100644
index 00000000..b67b571a
--- /dev/null
+++ b/project/land-secondary.mk
@@ -0,0 +1,33 @@
+# top level project rules for the land project
+#
+LOCAL_DIR := $(GET_LOCAL_DIR)
+
+OUTBOOTIMG := $(BUILDDIR)/lk2nd.img
+
+# Enable fastboot display menu
+ENABLE_FBCON_DISPLAY_MSG := 1
+DISABLE_CRYPTO := 1
+
+include $(LOCAL_DIR)/msm8952.mk
+
+#  maximum verbosity
+BOARD_NAME := land-secondary
+CFLAGS += -Wno-error
+CFLAGS += -DMIPI_FB_ADDR=0x8dd01000
+DEBUG := 2
+DEFINES += DISABLE_CRYPTO=1
+DEFINES += LK_LOG_BUF_SIZE=16384
+
+# Avoid writing device info
+DEFINES += SAFE_MODE=1
+# Display as unlocked by default
+DEFINES += DEFAULT_UNLOCK=1
+
+DEFINES += DISPLAY_SPLASH_SCREEN=1
+
+# Use continuous splash from primary bootloader for display
+DISPLAY_USE_CONTINUOUS_SPLASH := 1
+
+APPSBOOTHEADER: $(OUTBOOTIMG)
+ANDROID_BOOT_BASE := 0x80000000
+ANDROID_BOOT_CMDLINE := lk2nd
diff --git a/project/mi439-secondary.mk b/project/mi439-secondary.mk
new file mode 100644
index 00000000..84f789e5
--- /dev/null
+++ b/project/mi439-secondary.mk
@@ -0,0 +1,32 @@
+# top level project rules for the mi439 project
+#
+LOCAL_DIR := $(GET_LOCAL_DIR)
+
+OUTBOOTIMG := $(BUILDDIR)/lk2nd.img
+
+# Enable fastboot display menu
+ENABLE_FBCON_DISPLAY_MSG := 1
+DISABLE_CRYPTO := 1
+
+include $(LOCAL_DIR)/msm8952.mk
+
+#  maximum verbosity
+BOARD_NAME := mi439-secondary
+CFLAGS += -Wno-error
+DEBUG := 2
+DEFINES += DISABLE_CRYPTO=1
+DEFINES += LK_LOG_BUF_SIZE=16384
+
+# Avoid writing device info
+DEFINES += SAFE_MODE=1
+# Display as unlocked by default
+DEFINES += DEFAULT_UNLOCK=1
+
+DEFINES += DISPLAY_SPLASH_SCREEN=1
+
+# Use continuous splash from primary bootloader for display
+DISPLAY_USE_CONTINUOUS_SPLASH := 1
+
+APPSBOOTHEADER: $(OUTBOOTIMG)
+ANDROID_BOOT_BASE := 0x80000000
+ANDROID_BOOT_CMDLINE := lk2nd
diff --git a/project/mi8937-secondary.mk b/project/mi8937-secondary.mk
new file mode 100644
index 00000000..5555b9d3
--- /dev/null
+++ b/project/mi8937-secondary.mk
@@ -0,0 +1,35 @@
+# top level project rules for the mi8937 project
+#
+LOCAL_DIR := $(GET_LOCAL_DIR)
+
+OUTBOOTIMG := $(BUILDDIR)/lk2nd.img
+
+# Enable fastboot display menu
+ENABLE_FBCON_DISPLAY_MSG := 1
+DISABLE_CRYPTO := 1
+
+include $(LOCAL_DIR)/msm8952.mk
+
+#  maximum verbosity
+BOARD_NAME := mi8937-secondary
+CFLAGS += -Wno-error
+DEBUG := 2
+DEFINES += DISABLE_CRYPTO=1
+DEFINES += LK_LOG_BUF_SIZE=16384
+
+# Avoid writing device info
+DEFINES += SAFE_MODE=1
+# Display as unlocked by default
+DEFINES += DEFAULT_UNLOCK=1
+
+DEFINES += DISPLAY_SPLASH_SCREEN=1
+
+# Use continuous splash from primary bootloader for display
+DISPLAY_USE_CONTINUOUS_SPLASH := 1
+
+# Mi8937 Kernel support
+DEFINES += MI8937_KERNEL=1
+
+APPSBOOTHEADER: $(OUTBOOTIMG)
+ANDROID_BOOT_BASE := 0x80000000
+ANDROID_BOOT_CMDLINE := lk2nd
diff --git a/target/msm8952/include/target/display.h b/target/msm8952/include/target/display.h
index 97aadf24..e23625ed 100644
--- a/target/msm8952/include/target/display.h
+++ b/target/msm8952/include/target/display.h
@@ -81,7 +81,9 @@ static const uint32_t panel_physical_ctrl[] = {
 /*---------------------------------------------------------------------------*/
 #define DISPLAY_CMDLINE_PREFIX " mdss_mdp.panel="
 
+#ifndef MIPI_FB_ADDR
 #define MIPI_FB_ADDR 0x90000000
+#endif
 
 #define MIPI_HSYNC_PULSE_WIDTH       12
 #define MIPI_HSYNC_BACK_PORCH_DCLK   32
